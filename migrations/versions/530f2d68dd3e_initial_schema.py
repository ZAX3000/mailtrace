"""initial schema

Revision ID: 530f2d68dd3e
Revises: 
Create Date: 2025-10-20 20:12:31.878010

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '530f2d68dd3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('website_url', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('crm', sa.String(), nullable=True),
    sa.Column('mail_provider', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('mail_csv_url', sa.String(), nullable=False),
    sa.Column('crm_csv_url', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('mail_count', sa.Integer(), nullable=True),
    sa.Column('match_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('metered_item_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_table('geo_points',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('kind', sa.String(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('event_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('geo_points', schema=None) as batch_op:
        batch_op.create_index('idx_geo_user_kind_date', ['user_id', 'kind', 'event_date'], unique=False)

    op.create_table('matches',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('crm_id', sa.String(), nullable=True),
    sa.Column('crm_job_date', sa.Date(), nullable=True),
    sa.Column('job_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('matched_mail_full_address', sa.Text(), nullable=True),
    sa.Column('mail_dates_in_window', sa.Text(), nullable=True),
    sa.Column('mail_count_in_window', sa.Integer(), nullable=True),
    sa.Column('confidence_percent', sa.Integer(), nullable=True),
    sa.Column('match_notes', sa.Text(), nullable=True),
    sa.Column('crm_city', sa.String(), nullable=True),
    sa.Column('crm_state', sa.String(), nullable=True),
    sa.Column('crm_zip', sa.String(), nullable=True),
    sa.Column('zip5', sa.String(length=5), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('last_mail_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.create_index('idx_matches_date', ['user_id', 'crm_job_date'], unique=False)
        batch_op.create_index('idx_matches_run', ['run_id'], unique=False)
        batch_op.create_index('idx_matches_user', ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.drop_index('idx_matches_user')
        batch_op.drop_index('idx_matches_run')
        batch_op.drop_index('idx_matches_date')

    op.drop_table('matches')
    with op.batch_alter_table('geo_points', schema=None) as batch_op:
        batch_op.drop_index('idx_geo_user_kind_date')

    op.drop_table('geo_points')
    op.drop_table('subscriptions')
    op.drop_table('runs')
    op.drop_table('users')
    # ### end Alembic commands ###
